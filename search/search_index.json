{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CoderDojo Twin Cities Web and User Experience Resources Welcome to the Web/User Experience repository for teachers and mentors. We are developing our own Introduction to HTML courses on this site and we also have links to other resources for your students.","title":"Home"},{"location":"#coderdojo-twin-cities-web-and-user-experience-resources","text":"Welcome to the Web/User Experience repository for teachers and mentors. We are developing our own Introduction to HTML courses on this site and we also have links to other resources for your students.","title":"CoderDojo Twin Cities Web and User Experience Resources"},{"location":"contact/","text":"Contacts General Code Savvy Contact kidscode@codesavvy.org Specific questions on this repository Dan McCreary Dan.McCreary@gmail.com","title":"Contact"},{"location":"contact/#contacts","text":"","title":"Contacts"},{"location":"contact/#general-code-savvy-contact","text":"kidscode@codesavvy.org","title":"General Code Savvy Contact"},{"location":"contact/#specific-questions-on-this-repository","text":"Dan McCreary Dan.McCreary@gmail.com","title":"Specific questions on this repository"},{"location":"leaning-objectives/","text":"Web-UX Learning Objectives Target audience A typical 10-12 year old student that wants to learn how to create their own web pages. Typical Sessions Three one-hour sessions Sample HTML Topics Introduction to HTML Markup - begin and end tags HTML file structure - html, head and body Bold, italic and underline Adding hypertext links Images Lists: unordered and ordered Tables: rows and columns Description lists Code Block quotes Inline quotes Subscripts and superscripts HTML colors: font, and background color Comments Sample CSS Topics Why use CSS CSS syntax Changing default behavior: font Adding class attributes to HTML elements CSS Selectors Location styling Styling based on state: hover and visited Combining selectors External vs. Inline CSS Inline styles At rules Shorthands Comments White space Borders Using borders to debug layouts Resources for learning Web CodePen JSFiddle","title":"Learning Objectives"},{"location":"leaning-objectives/#web-ux-learning-objectives","text":"","title":"Web-UX Learning Objectives"},{"location":"leaning-objectives/#target-audience","text":"A typical 10-12 year old student that wants to learn how to create their own web pages.","title":"Target audience"},{"location":"leaning-objectives/#typical-sessions","text":"Three one-hour sessions","title":"Typical Sessions"},{"location":"leaning-objectives/#sample-html-topics","text":"Introduction to HTML Markup - begin and end tags HTML file structure - html, head and body Bold, italic and underline Adding hypertext links Images Lists: unordered and ordered Tables: rows and columns Description lists Code Block quotes Inline quotes Subscripts and superscripts HTML colors: font, and background color Comments","title":"Sample HTML Topics"},{"location":"leaning-objectives/#sample-css-topics","text":"Why use CSS CSS syntax Changing default behavior: font Adding class attributes to HTML elements CSS Selectors Location styling Styling based on state: hover and visited Combining selectors External vs. Inline CSS Inline styles At rules Shorthands Comments White space Borders Using borders to debug layouts","title":"Sample CSS Topics"},{"location":"leaning-objectives/#resources-for-learning-web","text":"CodePen JSFiddle","title":"Resources for learning Web"},{"location":"resources/","text":"Web Resources Here are some resources for teaching web and UX concepts. Mozilla course materials: Mozilla Getting Started with HTML Mozilla Getting Started with CSS Mozilla Getting Started with Javascript GitHub GitHub's Introduction to HTML Pluralsight Teaching Kids HTML Pluralsight This link is to a set of many short videos on teaching HTML to kids. Very well produced. There may be some fees for accessing this content.","title":"Resources"},{"location":"resources/#web-resources","text":"Here are some resources for teaching web and UX concepts.","title":"Web Resources"},{"location":"resources/#mozilla-course-materials","text":"Mozilla Getting Started with HTML Mozilla Getting Started with CSS Mozilla Getting Started with Javascript","title":"Mozilla course materials:"},{"location":"resources/#github","text":"GitHub's Introduction to HTML","title":"GitHub"},{"location":"resources/#pluralsight","text":"Teaching Kids HTML Pluralsight This link is to a set of many short videos on teaching HTML to kids. Very well produced. There may be some fees for accessing this content.","title":"Pluralsight"},{"location":"intro-to-html/01-intro/","text":"Introduction to HTML Elements and Attributes GitHub https://lab.github.com/githubtraining/introduction-to-html","title":"Introduction"},{"location":"intro-to-html/01-intro/#introduction-to-html","text":"","title":"Introduction to HTML"},{"location":"intro-to-html/01-intro/#elements-and-attributes","text":"","title":"Elements and Attributes"},{"location":"intro-to-html/01-intro/#github","text":"https://lab.github.com/githubtraining/introduction-to-html","title":"GitHub"},{"location":"intro-to-html/02-html-structure/","text":"Introduction to HTML GitHub https://lab.github.com/githubtraining/introduction-to-html","title":"HTML File Structure"},{"location":"intro-to-html/02-html-structure/#introduction-to-html","text":"","title":"Introduction to HTML"},{"location":"intro-to-html/02-html-structure/#github","text":"https://lab.github.com/githubtraining/introduction-to-html","title":"GitHub"},{"location":"intro-to-html/03-headings/","text":"HTML Headings HTML headings appear in the body element. They have different levels and get smaller in font as you increase the heading level. Sometimes the first level heading <h1> is use as the title of the document. If you have a large document then <h2> might be the chapter headings and <h3/> might be the chapter sections. < h1 > Article Title </ h1 > < h2 > Chapter Heading </ h2 > < h3 > Chapter Section </ h3 > < h4 > Chapter Subsection </ h4 > < h5 > Chapter Sub-Subsection </ h5 > Here is how these would render: Article Title Chapter Heading Chapter Section Chapter Subsection Chapter Sub-Subsection Note that by default, headings always appear on their own line. However, you can use CSS to change the font size, font color, spacing around the headers and add border and color to the background of a header.","title":"Headings"},{"location":"intro-to-html/03-headings/#html-headings","text":"HTML headings appear in the body element. They have different levels and get smaller in font as you increase the heading level. Sometimes the first level heading <h1> is use as the title of the document. If you have a large document then <h2> might be the chapter headings and <h3/> might be the chapter sections. < h1 > Article Title </ h1 > < h2 > Chapter Heading </ h2 > < h3 > Chapter Section </ h3 > < h4 > Chapter Subsection </ h4 > < h5 > Chapter Sub-Subsection </ h5 > Here is how these would render:","title":"HTML Headings"},{"location":"intro-to-html/04-bold-and-italic/","text":"HTML Headings HTML headings appear in the body element. They have different levels and get smaller in font as you increase the heading level. Sometimes the first level heading <h1> is use as the title of the document. If you have a large document then <h2> might be the chapter headings and <h3/> might be the chapter sections. < h1 > Article Title </ h1 > < h2 > Chapter Heading </ h2 > < h3 > Chapter Section </ h3 > < h4 > Chapter Subsection </ h4 > < h5 > Chapter Sub-Subsection </ h5 > Here is how these would render: Article Title Chapter Heading Chapter Section Chapter Subsection Chapter Sub-Subsection Note that by default, headings always appear on their own line. However, you can use CSS to change the font size, font color, spacing around the headers and add border and color to the background of a header.","title":"HTML Headings"},{"location":"intro-to-html/04-bold-and-italic/#html-headings","text":"HTML headings appear in the body element. They have different levels and get smaller in font as you increase the heading level. Sometimes the first level heading <h1> is use as the title of the document. If you have a large document then <h2> might be the chapter headings and <h3/> might be the chapter sections. < h1 > Article Title </ h1 > < h2 > Chapter Heading </ h2 > < h3 > Chapter Section </ h3 > < h4 > Chapter Subsection </ h4 > < h5 > Chapter Sub-Subsection </ h5 > Here is how these would render:","title":"HTML Headings"},{"location":"intro-to-html/05-lists/","text":"HTML Lists HTML has several types of lists: Unorder lists Ordered Lists Definition Lists Unordered Lists This is just a simple list with markers called \"bullets\" at the front of every new list item. We used the <ul> tag to start an unordered list and we use the <li> tag to specify each list item. < ul > < li > Apples </ li > < li > Bananas </ li > < li > Pears </ li > </ ul > Apples Bananas Pears Ordered lists Apples Bananas Pears ``` Apples Bananas Pears Definition lists These are lists that have a label or title at the front of each item. The item then has a definition description right after the title. Each item can have it's own distinct label. Definition lists are ideal for creating a dictionary list where the label Engage Where we introdce our topic and any backround motivation. Elicit Where we ask the students what their prior knowledge and how it might be related to the new topic. Explore Where students get a chance to interact with the elements and try out some sample code. Explain Where we explain what each component does. Elaborate Where we dive into the details of how the components interact. Extend Where we ask students to extend the example code. Evaluate Where we check if the students compenhend the lesson","title":"HTML Lists"},{"location":"intro-to-html/05-lists/#html-lists","text":"HTML has several types of lists: Unorder lists Ordered Lists Definition Lists","title":"HTML Lists"},{"location":"intro-to-html/05-lists/#unordered-lists","text":"This is just a simple list with markers called \"bullets\" at the front of every new list item. We used the <ul> tag to start an unordered list and we use the <li> tag to specify each list item. < ul > < li > Apples </ li > < li > Bananas </ li > < li > Pears </ li > </ ul > Apples Bananas Pears","title":"Unordered Lists"},{"location":"intro-to-html/05-lists/#ordered-lists","text":"Apples Bananas Pears ``` Apples Bananas Pears","title":"Ordered lists"},{"location":"intro-to-html/05-lists/#definition-lists","text":"These are lists that have a label or title at the front of each item. The item then has a definition description right after the title. Each item can have it's own distinct label. Definition lists are ideal for creating a dictionary list where the label Engage Where we introdce our topic and any backround motivation. Elicit Where we ask the students what their prior knowledge and how it might be related to the new topic. Explore Where students get a chance to interact with the elements and try out some sample code. Explain Where we explain what each component does. Elaborate Where we dive into the details of how the components interact. Extend Where we ask students to extend the example code. Evaluate Where we check if the students compenhend the lesson","title":"Definition lists"},{"location":"intro-to-html/06-links/","text":"HTML Bold and Italic","title":"Links"},{"location":"intro-to-html/06-links/#html-bold-and-italic","text":"","title":"HTML Bold and Italic"},{"location":"intro-to-html/07-images/","text":"HTML Images < img src = \"img/myPicture.jpg\" >","title":"Images"},{"location":"intro-to-html/07-images/#html-images","text":"< img src = \"img/myPicture.jpg\" >","title":"HTML Images"},{"location":"intro-to-html/08-tables/","text":"HTML Tables","title":"Tables"},{"location":"intro-to-html/08-tables/#html-tables","text":"","title":"HTML Tables"},{"location":"intro-to-html/09-forms/","text":"HTML Forms","title":"HTML Forms"},{"location":"intro-to-html/09-forms/#html-forms","text":"","title":"HTML Forms"},{"location":"svg/01-intro/","text":"Introduction to SVG and Canvas SVG Labs Getting Started HTML Template for testing SVG SVG Circle SVG Line SVG Rectangle SVG Ellipse SVG Polygon SVG Polyline SVG Path SVG Text SVG Text Effects SVG Gradients SVG Gallery of Fun Example https://www.w3schools.com/graphics/svg_intro.asp Canvas Canvas is the HTML element that holds a drawing region on a web page using JavaScript. We can use a canvas program to do animations, write games. Before you dive into these labs you will need to know both some SVG and JavaScript to modify the demos.","title":"Introduction"},{"location":"svg/01-intro/#introduction-to-svg-and-canvas","text":"","title":"Introduction to SVG and Canvas"},{"location":"svg/01-intro/#svg-labs","text":"Getting Started HTML Template for testing SVG SVG Circle SVG Line SVG Rectangle SVG Ellipse SVG Polygon SVG Polyline SVG Path SVG Text SVG Text Effects SVG Gradients SVG Gallery of Fun Example https://www.w3schools.com/graphics/svg_intro.asp","title":"SVG Labs"},{"location":"svg/01-intro/#canvas","text":"Canvas is the HTML element that holds a drawing region on a web page using JavaScript. We can use a canvas program to do animations, write games. Before you dive into these labs you will need to know both some SVG and JavaScript to modify the demos.","title":"Canvas"},{"location":"svg/02-circle/","text":"Drawing a Circle with SVG Lets start with drawing a single circle. We will need to tell our web browser to draw it in a region that is 100 pixels high and 100 pixels wide. We then need to tell the web browser where to center the circle in both the X and Y dimensions (cx and cy) and what the radius of the circle should be. Here is an example: < svg height = \"100\" width = \"100\" > < circle cx = \"50\" cy = \"50\" r = \"40\" /> </ svg > This example will generate the following circle: That is kind of a dark circle. Let's fill in the circle with blue and make the border be red. We will do this by adding the fill, stroke (for the color of the border) and the stroke-width that will change the width of the border of the circle. < svg height = \"100\" width = \"100\" > < circle cx = \"50\" cy = \"50\" r = \"40\" stroke = \"red\" stroke-width = \"4\" fill = \"blue\" /> </ svg > This will generate the following result: Try changing the color of the fill or the stroke and see what happens! Run on JS Fiddle.net Run on Fiddle","title":"Circle"},{"location":"svg/02-circle/#drawing-a-circle-with-svg","text":"Lets start with drawing a single circle. We will need to tell our web browser to draw it in a region that is 100 pixels high and 100 pixels wide. We then need to tell the web browser where to center the circle in both the X and Y dimensions (cx and cy) and what the radius of the circle should be. Here is an example: < svg height = \"100\" width = \"100\" > < circle cx = \"50\" cy = \"50\" r = \"40\" /> </ svg > This example will generate the following circle: That is kind of a dark circle. Let's fill in the circle with blue and make the border be red. We will do this by adding the fill, stroke (for the color of the border) and the stroke-width that will change the width of the border of the circle. < svg height = \"100\" width = \"100\" > < circle cx = \"50\" cy = \"50\" r = \"40\" stroke = \"red\" stroke-width = \"4\" fill = \"blue\" /> </ svg > This will generate the following result: Try changing the color of the fill or the stroke and see what happens!","title":"Drawing a Circle with SVG"},{"location":"svg/02-circle/#run-on-js-fiddlenet","text":"Run on Fiddle","title":"Run on JS Fiddle.net"},{"location":"svg/03-line/","text":"Drawing Lines with SVG < svg height = \"100\" width = \"100\" > < line x1 = \"20\" y1 = \"10\" x2 = \"90\" y2 = \"80\" stroke = \"green\" stroke-width = \"5\" /> </ svg > This example will generate the following circle:","title":"Line"},{"location":"svg/03-line/#drawing-lines-with-svg","text":"< svg height = \"100\" width = \"100\" > < line x1 = \"20\" y1 = \"10\" x2 = \"90\" y2 = \"80\" stroke = \"green\" stroke-width = \"5\" /> </ svg > This example will generate the following circle:","title":"Drawing Lines with SVG"},{"location":"svg/04-rectangle/","text":"Drawing Rectangles with SVG < svg height = \"200\" width = \"200\" > < rect x = \"10\" y = \"20\" width = \"150\" height = \"100\" fill = \"lightblue\" stroke-width = \"3\" ; stroke = \"purple\" /> </ svg > This example will generate the following rectangle:","title":"Rectangle"},{"location":"svg/04-rectangle/#drawing-rectangles-with-svg","text":"< svg height = \"200\" width = \"200\" > < rect x = \"10\" y = \"20\" width = \"150\" height = \"100\" fill = \"lightblue\" stroke-width = \"3\" ; stroke = \"purple\" /> </ svg > This example will generate the following rectangle:","title":"Drawing Rectangles with SVG"},{"location":"svg/05-ellipse/","text":"Drawing Rectangles with SVG < svg height = \"200\" width = \"200\" > < ellipse cx = \"100\" cy = \"80\" rx = \"100\" ry = \"50\" fill = \"cyan\" stroke-width = \"3\" ; stroke = \"purple\" /> </ svg > This example will generate the following line:","title":"Ellipse"},{"location":"svg/05-ellipse/#drawing-rectangles-with-svg","text":"< svg height = \"200\" width = \"200\" > < ellipse cx = \"100\" cy = \"80\" rx = \"100\" ry = \"50\" fill = \"cyan\" stroke-width = \"3\" ; stroke = \"purple\" /> </ svg > This example will generate the following line:","title":"Drawing Rectangles with SVG"}]}