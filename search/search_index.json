{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CoderDojo Twin Cities Web and User Experience Resources Welcome to the Web/User Experience repository for teachers and mentors. We are developing our own Introduction to HTML courses on this site and we also have links to other resources for your students.","title":"Home"},{"location":"#coderdojo-twin-cities-web-and-user-experience-resources","text":"Welcome to the Web/User Experience repository for teachers and mentors. We are developing our own Introduction to HTML courses on this site and we also have links to other resources for your students.","title":"CoderDojo Twin Cities Web and User Experience Resources"},{"location":"contact/","text":"Contacts General Code Savvy Contact kidscode@codesavvy.org Specific questions on this repository Dan McCreary Dan.McCreary@gmail.com","title":"Contact"},{"location":"contact/#contacts","text":"","title":"Contacts"},{"location":"contact/#general-code-savvy-contact","text":"kidscode@codesavvy.org","title":"General Code Savvy Contact"},{"location":"contact/#specific-questions-on-this-repository","text":"Dan McCreary Dan.McCreary@gmail.com","title":"Specific questions on this repository"},{"location":"leaning-objectives/","text":"Web-UX Learning Objectives Target audience A typical 10-12 year old student that wants to learn how to create their own web pages. Typical Sessions Three one-hour sessions Sample HTML Topics Introduction to HTML Markup - begin and end tags HTML file structure - html, head and body Bold, italic and underline Adding hypertext links Images Lists: unordered and ordered Tables: rows and columns Description lists Code Block quotes Inline quotes Subscripts and superscripts HTML colors: font, and background color Comments Sample CSS Topics Why use CSS CSS syntax Changing default behavior: font Adding class attributes to HTML elements CSS Selectors Location styling Styling based on state: hover and visited Combining selectors External vs. Inline CSS Inline styles At rules Shorthands Comments White space Borders Using borders to debug layouts Resources for learning Web CodePen JSFiddle","title":"Learning Objectives"},{"location":"leaning-objectives/#web-ux-learning-objectives","text":"","title":"Web-UX Learning Objectives"},{"location":"leaning-objectives/#target-audience","text":"A typical 10-12 year old student that wants to learn how to create their own web pages.","title":"Target audience"},{"location":"leaning-objectives/#typical-sessions","text":"Three one-hour sessions","title":"Typical Sessions"},{"location":"leaning-objectives/#sample-html-topics","text":"Introduction to HTML Markup - begin and end tags HTML file structure - html, head and body Bold, italic and underline Adding hypertext links Images Lists: unordered and ordered Tables: rows and columns Description lists Code Block quotes Inline quotes Subscripts and superscripts HTML colors: font, and background color Comments","title":"Sample HTML Topics"},{"location":"leaning-objectives/#sample-css-topics","text":"Why use CSS CSS syntax Changing default behavior: font Adding class attributes to HTML elements CSS Selectors Location styling Styling based on state: hover and visited Combining selectors External vs. Inline CSS Inline styles At rules Shorthands Comments White space Borders Using borders to debug layouts","title":"Sample CSS Topics"},{"location":"leaning-objectives/#resources-for-learning-web","text":"CodePen JSFiddle","title":"Resources for learning Web"},{"location":"resources/","text":"Web Resources Here are some resources for teaching web and UX concepts. Mozilla course materials: Mozilla Getting Started with HTML Mozilla Getting Started with CSS Mozilla Getting Started with Javascript GitHub GitHub's Introduction to HTML Pluralsight Teaching Kids HTML Pluralsight This link is to a set of many short videos on teaching HTML to kids. Very well produced. There may be some fees for accessing this content.","title":"Web Resources"},{"location":"resources/#web-resources","text":"Here are some resources for teaching web and UX concepts.","title":"Web Resources"},{"location":"resources/#mozilla-course-materials","text":"Mozilla Getting Started with HTML Mozilla Getting Started with CSS Mozilla Getting Started with Javascript","title":"Mozilla course materials:"},{"location":"resources/#github","text":"GitHub's Introduction to HTML","title":"GitHub"},{"location":"resources/#pluralsight","text":"Teaching Kids HTML Pluralsight This link is to a set of many short videos on teaching HTML to kids. Very well produced. There may be some fees for accessing this content.","title":"Pluralsight"},{"location":"intro-to-html/01-intro/","text":"Introduction to HTML GitHub https://lab.github.com/githubtraining/introduction-to-html","title":"Introduction"},{"location":"intro-to-html/01-intro/#introduction-to-html","text":"","title":"Introduction to HTML"},{"location":"intro-to-html/01-intro/#github","text":"https://lab.github.com/githubtraining/introduction-to-html","title":"GitHub"},{"location":"svg/01-intro/","text":"Introduction to SVG and Canvas SVG Labs Getting Started HTML Template for testing SVG SVG Circle SVG Line SVG Ellipse SVG Rectangle SVG Polygon SVG Polyline SVG Path SVG Text SVG Text Effects SVG Gradients SVG Gallery of Fun Example https://www.w3schools.com/graphics/svg_intro.asp Canvas Canvas is the HTML element that holds a drawing region on a web page using JavaScript. We can use a canvas program to do animations, write games. Before you dive into these labs you will need to know both some SVG and JavaScript to modify the demos.","title":"Introduction"},{"location":"svg/01-intro/#introduction-to-svg-and-canvas","text":"","title":"Introduction to SVG and Canvas"},{"location":"svg/01-intro/#svg-labs","text":"Getting Started HTML Template for testing SVG SVG Circle SVG Line SVG Ellipse SVG Rectangle SVG Polygon SVG Polyline SVG Path SVG Text SVG Text Effects SVG Gradients SVG Gallery of Fun Example https://www.w3schools.com/graphics/svg_intro.asp","title":"SVG Labs"},{"location":"svg/01-intro/#canvas","text":"Canvas is the HTML element that holds a drawing region on a web page using JavaScript. We can use a canvas program to do animations, write games. Before you dive into these labs you will need to know both some SVG and JavaScript to modify the demos.","title":"Canvas"},{"location":"svg/02-circle/","text":"Drawing a Circle with SVG Lets start with drawing a single circle. We will need to tell our web browser to draw it in a region that is 100 pixels high and 100 pixels wide. We then need to tell the web browser where to center the circle in both the X and Y dimensions (cx and cy) and what the radius of the circle should be. Here is an example: < svg height = \"100\" width = \"100\" > < circle cx = \"50\" cy = \"50\" r = \"40\" /> </ svg > This example will generate the following circle: That is kind of a dark circle. Let's fill in the circle with blue and make the border be red. We will do this by adding the fill, stroke (for the color of the border) and the stroke-width that will change the width of the border of the circle. < svg height = \"100\" width = \"100\" > < circle cx = \"50\" cy = \"50\" r = \"40\" stroke = \"black\" stroke-width = \"4\" fill = \"blue\" /> </ svg > This will generate the following result: Try changing the color of the fill or the stroke and see what happens! Run on JS Fiddle.net Run on Fiddle","title":"Circle"},{"location":"svg/02-circle/#drawing-a-circle-with-svg","text":"Lets start with drawing a single circle. We will need to tell our web browser to draw it in a region that is 100 pixels high and 100 pixels wide. We then need to tell the web browser where to center the circle in both the X and Y dimensions (cx and cy) and what the radius of the circle should be. Here is an example: < svg height = \"100\" width = \"100\" > < circle cx = \"50\" cy = \"50\" r = \"40\" /> </ svg > This example will generate the following circle: That is kind of a dark circle. Let's fill in the circle with blue and make the border be red. We will do this by adding the fill, stroke (for the color of the border) and the stroke-width that will change the width of the border of the circle. < svg height = \"100\" width = \"100\" > < circle cx = \"50\" cy = \"50\" r = \"40\" stroke = \"black\" stroke-width = \"4\" fill = \"blue\" /> </ svg > This will generate the following result: Try changing the color of the fill or the stroke and see what happens!","title":"Drawing a Circle with SVG"},{"location":"svg/02-circle/#run-on-js-fiddlenet","text":"Run on Fiddle","title":"Run on JS Fiddle.net"}]}